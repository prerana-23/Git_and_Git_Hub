working area command- git init - allow u to run any git command in that folder
git status to check how may files in working area
tracking area coomand - git add . -add every file in git's tracking zone
stagging  area - git commit -m "msg" - stags the file to get pushed on next "push command"
.gitignore - a file used to ignore the file which u don't want to get track of, by git 
these below three point for git directory 
1.git branch -M main
2.git remote add origin https://github.com/prerana-23(username)/mydear.git(respositary name) -setting address of the location where the changes will be pushed to 
3.git pull origin <branch name>
**note: if any conflict is there. first solve that conflict and repeat the step from line no 3.
git push origin <branch name>

.gitignore - a file used to ignore the file which u don't want to get track of, by git  if u want to igonore same extension all file from folder then write like that (*.html) in gitignore
git remote -  setting address of the location where the changes will be pushed to 
git log - show the hash code and detailabout the recent commit 
git status - show the current tracket and untracked files 
git reset - make all files are un tracked
git clone address(which u make clone)- clone/copies the git files from internet to your computer
git branch - show all branch
$commit and pushing chnges on internet
git add . -to add all file
git commit -m "message"- to commit
git pull origin master - to make sure u're up to date
git remote - to give location for push ur chnges// not neccessary when u pull main origin
git push origin master - pushing chnges to master

Branching and Stuff
git branch- show all branch
git branch Bname - cretes the brach with Bname
git checkout Bname-switch you to that branch to work your local save on that git branch

Merging branch to master branch
git checkout master - to move master branch
git pull origin master - make sure everything is up to date on your master branch before u merge
these to below come work same- for merging the branch
1. git branch --merged
2. git merge Bname(branch name) 
git push maste - to push the chnges on master

To create a new branch 
git checkout -b <branch name> (this cmd will create a new branch and will take in that branch.)
if you have already has branch in your local 
git checkout <branch name>
if you have already has branch in bitbucket but in your local
git fetch --all
git cehckout <branch name>

Use Control + Shift + m to toggle the tab key moving focus. Alternatively, use esc then tab to move to the next interactive element on the page.
Editing Git_and_Git_Hub/GItHUb_commad.txt at main Â· prerana-23/Git_and_Git_Hub
=======
working area command- git init - allow u to run any git command in that folder
git status to check how may files in working area
tracking area coomand - git add . -add every file in git's tracking zone
stagging  area - git commit -m "msg" - stags the file to get pushed on next "push command"
.gitignore - a file used to ignore the file which u don't want to get track of, by git 
these below three point for git directory 
1.git branch -M main
2.git remote add origin https://github.com/prerana-23(username)/mydear.git(respositary name) -setting address of the location where the changes will be pushed to 
3.git pull origin <branch name>
**note: if any conflict is there. first solve that conflict and repeat the step from line no 3.
git push origin <branch name>

.gitignore - a file used to ignore the file which u don't want to get track of, by git  if u want to igonore same extension all file from folder then write like that (*.html) in gitignore
git remote -  setting address of the location where the changes will be pushed to 
git log - show the hash code and detailabout the recent commit 
git status - show the current tracket and untracked files 
git reset - make all files are un tracked
git clone address(which u make clone)- clone/copies the git files from internet to your computer
git branch - show all branch
$commit and pushing chnges on internet
git add . -to add all file
git commit -m "message"- to commit
git pull origin master - to make sure u're up to date
git remote - to give location for push ur chnges// not neccessary when u pull main origin
git push origin master - pushing chnges to master

Branching and Stuff/and to create new branch
git branch- show all branch
git branch Bname - cretes the brach with Bname
git checkout Bname-switch you to that branch to work your local save on that git branch

Merging branch to master branch 
git checkout master - move to master branch
git pull origin master - make sure everything is up to date on your master branch before you merge 
these below two command work are same - is to merging the branch
1. git branch --merged 
2. git merge Bname(branch name)
git puch origin master - to push all chnges
